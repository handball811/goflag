// Code generated by command: go run main.go -out add.s -stubs stub.go. DO NOT EDIT.

#include "textflag.h"

// func Find(t uint64) byte
TEXT Â·Find(SB), NOSPLIT, $0-9
	MOVQ t+0(FP), AX
	XORQ CX, CX
	XORB DL, DL

	// Check lower 16bit
	MOVQ AX, CX
	ANDQ $0x0000ffff, CX
	CMPQ CX, $0x0000ffff
	JNE  point
	ADDB $0x10, DL
	SHRQ $0x10, AX

point:
	// Check lower 16bit
	MOVQ AX, CX
	ANDQ $0x0000ffff, CX
	CMPQ CX, $0x0000ffff
	JNE  point0
	ADDB $0x10, DL
	SHRQ $0x10, AX

point0:
	// Check lower 16bit
	MOVQ AX, CX
	ANDQ $0x0000ffff, CX
	CMPQ CX, $0x0000ffff
	JNE  point1
	ADDB $0x10, DL
	SHRQ $0x10, AX

point1:
	// Check lower 8bit
	MOVQ AX, CX
	ANDQ $0x000000ff, CX
	CMPQ CX, $0x000000ff
	JNE  point2
	ADDB $0x08, DL
	SHRQ $0x08, AX

point2:
	// Check lower 4bit
	MOVQ AX, CX
	ANDQ $0x0000000f, CX
	CMPQ CX, $0x0000000f
	JNE  point3
	ADDB $0x04, DL
	SHRQ $0x04, AX

point3:
	// Check lower 2bit
	MOVQ AX, CX
	ANDQ $0x00000003, CX
	CMPQ CX, $0x00000003
	JNE  point4
	ADDB $0x02, DL
	SHRQ $0x02, AX

point4:
	// Check lower 1bit
	MOVQ AX, CX
	ANDQ $0x00000001, CX
	CMPQ CX, $0x00000001
	JNE  point5
	ADDB $0x01, DL

point5:
	MOVB DL, ret+8(FP)
	RET
